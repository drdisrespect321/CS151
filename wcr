import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.concurrent.LinkedBlockingQueue;

/**
   Counts and reports the number of words in each of a group of files.
   Each count is done in a separate thread.
*/
public class WordCount implements Runnable
{
   /**
      Creates a WordCount objects that will count the words in the specified
      file
      @param filename the name of the file to count
   */
	
	  public static void main(String args[])
	   {
		  LinkedBlockingQueue LB_queue = new LinkedBlockingQueue();
	      for (String filename : args)
	      {
	         Runnable wordcounter = new WordCount(filename,LB_queue);

	         Thread t = new Thread(wordcounter);
	         t.start();
	      }
	      
	      int sum =0;
	      
	      try
	      {
	    	  for(int i=0; i<args.length;i++)
	    	  {
	    		  sum +=(int)LB_queue.take();
	    		  System.out.println("Total words: "+sum);
	    	  }
	      }
	      catch(InterruptedException e) {}
	   }
   public WordCount(String filename, LinkedBlockingQueue queue)
   {
      this.filename = filename;
      this.queue = queue;
   }

   public void run()
   {
      int count = 0;
    try
    {
      try
      {
         Scanner in = new Scanner(new File(filename));

         while (in.hasNext())
         {
            in.next();
            count++;
         }
         System.out.println(filename + ": " + count);
      }
      finally
      {
    	  queue.put(count);
      }
   }
      catch (FileNotFoundException e)
      {
         System.out.println(filename + " not found!");
      }
    
    catch(InterruptedException e){}
   }

   private String filename;
   private LinkedBlockingQueue queue;
}
